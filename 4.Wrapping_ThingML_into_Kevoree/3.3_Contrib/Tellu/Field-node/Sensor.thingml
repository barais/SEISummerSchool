import "SensorTimer.thingml"


thing fragment SensorMsgs {
	// Start the Timer
	message start_periodic_reading(delay : Integer);
	//Instruct to read sensor
	message read();
	// Cancel the Timer
	message reading_cancel();
	// Notification that the timer has expired
	message reading(value : Long);
	// Notification that sensor is online
	message ready();
}

thing Sensor includes TimerMsgs, SensorMsgs {

	property delay : Integer = 1000

	provided port sensor_service @public "true" {
		sends reading, ready
		receives start_periodic_reading, reading_cancel, read 
	}
	
	required port timer {
		receives timer_timeout
		sends timer_start, timer_cancel
	}

	
	
}